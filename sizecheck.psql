-- Case 1 :  Size check. For Pools Are we getting the same TBA sizes at eMBS

-- More or less yes. I will double check a few things

-- should be this 
-------------------This hopefully gets us the sum of the current face grouped by coupon for certain pools

-- the pools and poolbodies
SELECT   
    pools.cusip,
    pools.name,
    pools.indicator,
    pools.type,
    pools.originalface,
    poolbodies."interestRate",
    poolbodies."remainingBalance",
    poolbodies.factor,
    poolbodies.date 
INTO TEMP TABLE poolsforcurrfaceplat 
FROM pools 
INNER JOIN poolbodies
ON pools.cusip = poolbodies.cusip 
WHERE poolbodies.date = '2021-08-01'
AND pools.indicator = 'M'
AND pools.type = 'SF'
AND pools.istbaelig = 'true';


-- not so many SELECT 2454


-- yeah not a ton of these guys  
-- SELECT 
--   count(*)  
-- FROM pools 
-- INNER JOIN poolbodies
-- ON pools.cusip = poolbodies.cusip 
-- WHERE poolbodies.date = '2021-07-01'
-- AND pools.indicator = 'M'
-- AND pools.type = 'SF'


--  so this is preety simple we just sum current face and group by interest rate 
SELECT 
    poolsforcurrfaceplat."interestRate", 
    SUM(poolsforcurrfaceplat."remainingBalance")
FROM poolsforcurrfaceplat
GROUP BY poolsforcurrfaceplat."interestRate"
ORDER BY poolsforcurrfaceplat."interestRate";

--- this is teh same thing but with indicator x
SELECT   
    pools.cusip,
    pools.indicator,
    pools.type,
    poolbodies."interestRate",
    poolbodies."remainingBalance",
    poolbodies.factor,
    poolbodies.date
INTO TEMP TABLE poolstestforcurrfaceindicx 
FROM pools 
INNER JOIN poolbodies
ON pools.cusip = poolbodies.cusip 
WHERE poolbodies.date = '2021-08-01'
AND pools.indicator = 'X'
AND pools.type = 'SF'
AND pools.istbaelig = 'true';

-- and the sum and group by part
SELECT poolstestforcurrfaceindicx."interestRate", SUM(poolstestforcurrfaceindicx."remainingBalance")
FROM poolstestforcurrfaceindicx
GROUP BY poolstestforcurrfaceindicx."interestRate"
ORDER BY poolstestforcurrfaceindicx."interestRate";

-- same thing as above but with copy 
\copy (SELECT poolstestforcurrfaceindicx."interestRate", SUM(poolstestforcurrfaceindicx."remainingBalance") FROM poolstestforcurrfaceindicx GROUP BY poolstestforcurrfaceindicx."interestRate" ORDER BY poolstestforcurrfaceindicx."interestRate" ) to 'C:\Users\micha\sumofcurrentface' csv header;

------------------
-- now we need to sum current face of pools + platinums 


-- Case 2 :  Size check. For Pools + Platinums

-- When pools are combined into platinum no new loans are made. Hence our result in case 1 should be similar to this

-- For each coupon we find

-- current face of pool - current face in platinums + current face in platinums

-- Aside from the cases where TBA eligible pools are dumped into a non TBA eligible platinum the sizes we get here should be the same as case 1.
----OOOHHHH maybe I am doing this all wrong 

-- so I have something that should get the pool curent face - the current face of pool in the plat 

-- this
-- current face of pool - current face in platinums + current face in platinums

-- but which pools do we want??

-- now trying to replicate the size stuff
-- so I had this just joins the pool to the poolbody and filters out the ones we don't want 

SELECT   
    pools.cusip,
    pools.name,
    pools.indicator,
    pools.type,
    pools.originalface,
    poolbodies."interestRate",
    poolbodies."remainingBalance",
    poolbodies.factor,
    poolbodies.date 
INTO TEMP TABLE poolsforcurrfaceplat 
FROM pools 
INNER JOIN poolbodies
ON pools.cusip = poolbodies.cusip 
WHERE poolbodies.date = '2021-08-01'
AND pools.indicator = 'M'
AND pools.type = 'SF'
AND pools.istbaelig = 'true';


-------------- going to need platinums

SELECT 
    platinums.cusip,
    platinums.name,
    platinumbodies.istbaelig,
    platinumbodies.date
INTO TEMP TABLE currplats
FROM platinums
INNER JOIN platinumbodies
ON platinums.cusip = platinumbodies.cusip
WHERE platinumbodies.date = '2021-08-01';

-- LIMIT 2;

-- to get the platinum one i need this but need to subtract the part already in platinums 

-- current face of pool - current face in platinums + current face in platinums so this is going fine for pools in plats but I will also need to check on pools not in plats

-- So I think this gets me everything I need

-- so a pool can be in more than one platinums so we need to go through them all find the currface in plat the sum them up by pool cusip, then I can subtract from pool currface ...


--so this gets currentface of a pool in the plats, should probably add a born date ...
-- now it aslo has more of the platinum info 
-- so this should be working fine.. i get the current face of a pool in a plat i can see if
-- it is tba elig or not if it's not can just not sum it   

SELECT 
    platcolls.cusip AS platcusip,
    currplats.istbaelig,
    currplats.name,
    poolsforcurrfaceplat.cusip AS poolcusip, 
    (platcolls.faceinplatinum/100) * (poolsforcurrfaceplat."remainingBalance" /poolsforcurrfaceplat.originalface) AS currfaceinplat, 
    poolsforcurrfaceplat."remainingBalance" /poolsforcurrfaceplat.originalface as factortwo
INTO TEMP TABLE poolcurrfaceinplatt
FROM platcolls
INNER JOIN poolsforcurrfaceplat
ON poolsforcurrfaceplat.name = platcolls.poolname
AND poolsforcurrfaceplat.indicator = platcolls.indicator
INNER JOIN currplats
ON currplats.cusip = platcolls.cusip;


-- now trying to start a second round so seems to join ok... but what to do now...
-- keep on trying to go until i get to the very end.. and once i get to the end how do 
-- i get back to the begining??

-- so these are 98 platinums that need to be checked to see if they have current face
-- in another platinum.. so do they need to go into another temp table?? 
-- probably the easiest thing to do at the moment 

-- can I just add them to the table?? maybe 

-- so this is essentialy as a second round where I am looking into the platinums that are tba
-- eligible (if they platinum was not tba eligible we are not adding teh current face so no point in
-- looking further) and have current face in other platinums to see if we need to subtract  

SELECT
    -- DISTINCT platcolls.cusip
    platcolls.cusip,
    currplats.name,
    -- currplats.istbaelig,
    -- poolcurrfaceinplatt.platcusip,
    -- poolcurrfaceinplatt.name,
    poolcurrfaceinplatt.istbaelig
    -- currplats.istbaelig
    -- currplats.name
    -- poolsforcurrfaceplat.cusip AS poolcusip, 
    -- (platcolls.faceinplatinum/100) * (poolsforcurrfaceplat."remainingBalance" /poolsforcurrfaceplat.originalface) AS currfaceinplat, 
    -- poolsforcurrfaceplat."remainingBalance" /poolsforcurrfaceplat.originalface as factortwo
INTO TEMP TABLE poolcurrfaceinplatttwo
FROM platcolls
INNER JOIN poolcurrfaceinplatt
ON poolcurrfaceinplatt.name = platcolls.poolname
INNER JOIN currplats
ON currplats.cusip = platcolls.cusip
WHERE poolcurrfaceinplatt.istbaelig IS TRUE
AND currplats.istbaelig IS TRUE


SELECT
    -- COUNT (DISTINCT platcolls.cusip)
    platcolls.cusip,
    currplats.name,
    -- currplats.istbaelig,
    -- poolcurrfaceinplatt.platcusip,
    -- poolcurrfaceinplatt.name,
    -- poolcurrfaceinplatt.istbaelig,
    currplats.istbaelig
    -- currplats.name
    -- poolsforcurrfaceplat.cusip AS poolcusip, 
    -- (platcolls.faceinplatinum/100) * (poolsforcurrfaceplat."remainingBalance" /poolsforcurrfaceplat.originalface) AS currfaceinplat, 
    -- poolsforcurrfaceplat."remainingBalance" /poolsforcurrfaceplat.originalface as factortwo
INTO TEMP TABLE poolcurrfaceinplattthree
FROM platcolls
INNER JOIN poolcurrfaceinplatttwo
ON poolcurrfaceinplatttwo.name = platcolls.poolname
INNER JOIN currplats
ON currplats.cusip = platcolls.cusip
WHERE poolcurrfaceinplatttwo.istbaelig IS TRUE
AND currplats.istbaelig IS TRUE;


SELECT
    COUNT (DISTINCT platcolls.cusip)
    -- platcolls.cusip,
    -- currplats.name,
    -- currplats.istbaelig,
    -- poolcurrfaceinplatt.platcusip,
    -- poolcurrfaceinplatt.name,
    -- poolcurrfaceinplatt.istbaelig,
    -- currplats.istbaelig
    -- currplats.name
    -- poolsforcurrfaceplat.cusip AS poolcusip, 
    -- (platcolls.faceinplatinum/100) * (poolsforcurrfaceplat."remainingBalance" /poolsforcurrfaceplat.originalface) AS currfaceinplat, 
    -- poolsforcurrfaceplat."remainingBalance" /poolsforcurrfaceplat.originalface as factortwo
-- INTO TEMP TABLE poolcurrfaceinplatttwo
FROM platcolls
INNER JOIN poolcurrfaceinplattthree
ON poolcurrfaceinplattthree.name = platcolls.poolname
INNER JOIN currplats
ON currplats.cusip = platcolls.cusip
WHERE poolcurrfaceinplattthree.istbaelig IS TRUE
AND currplats.istbaelig IS TRUE



LIMIT 10;

-- just checking to see which platinums we have and seeing if they are is TBA eligible
-- so this works just fine but I don't really need this could just inner join on pervious 
-- table and if something is not tba eligible we don't count it.. but what about checking 
-- checking platinums for platinums

SELECT 
    DISTINCT platcusip,
    istbaelig
INTO TEMP TABLE platstbaelig
FROM poolcurrfaceinplatt
inner join platinumbodies
ON poolcurrfaceinplatt.platcusip = platinumbodies.cusip
where platinumbodies.date = '2021-08-01';

-- so I am getting twelve that should not be counted 

 platcusip | istbaelig
-----------+-----------
 3622A3CL2 | f
 36241LCQ7 | f
 36241LCC8 | f
 36225AYS3 | f
 3622A23J9 | f
 36241LH33 | f
 3622A2AV4 | f
 3622AAYQ1 | f
 3622AAGG3 | f
 3622A2RQ7 | f
 36241LJZ0 | f
 3622AAZD9 | f


LIMIT 10;

-- WHERE poolsforcurrfaceplat.cusip = '36202CTQ6';

-- SELECT 
--     platcolls.cusip,
--     poolsforcurrfaceplat.cusip AS poolcusip, 
--     (platcolls.faceinplatinum/100) * (poolsforcurrfaceplat."remainingBalance" /poolsforcurrfaceplat.originalface) AS currfaceinplat, 
--     poolsforcurrfaceplat."remainingBalance" /poolsforcurrfaceplat.originalface as factortwo
-- -- INTO TEMP TABLE poolcurrfaceinplatt
-- FROM platcolls
-- INNER JOIN poolsforcurrfaceplat
-- ON poolsforcurrfaceplat.name = platcolls.poolname
-- AND poolsforcurrfaceplat.indicator = platcolls.indicator
-- WHERE poolsforcurrfaceplat.cusip = '36202CHS5';

--    cusip   | poolcusip |   currfaceinplat   |       factortwo
-- -----------+-----------+--------------------+-----------------------
--  36225AGG9 | 36202CHS5 | 2626.0004013648554 | 0.0015847633424650462

--     cusip   |  name  | indicator | type | issuedate | maturitydate | originalface | istbaelig
-- -----------+--------+-----------+------+-----------+--------------+--------------+-----------
--  36225AGG9 | 780199 | C         | SP   |  19950701 |     20250720 |     10077859 | t


--    cusip   |  name  | indicator | type | issuedate | maturitydate | originalface | istbaelig
-- -----------+--------+-----------+------+-----------+--------------+--------------+-----------
--  36202CHS5 | 002041 | M         | SF   |  19950701 |     20250720 |     17281533 | t

-- SELECT * FROM platcolls WHERE cusip = '36225AGG9' and poolname = '002041';    

--    cusip   | poolname | indicator | faceinplatinum | active |    born    | terminated
-- -----------+----------+-----------+----------------+--------+------------+------------
--  36225AGG9 | 002041   | M         |      165703000 | A      | 2021-05-01 |

---so this gets the sum of all of the pools current face in plats grouped by the pool cusip 
SELECT 
    poolcurrfaceinplatt.poolcusip, 
    SUM(poolcurrfaceinplatt.currfaceinplat) as sumpoolcfinplat
INTO TEMP TABLE totalpoolcurrfaceinplatt  
FROM poolcurrfaceinplatt
GROUP BY poolcurrfaceinplatt.poolcusip;

-- LIMIT 10;

-- this should be the current face of all pools minus the current face in the plats so should probably pair this down
-- so at this point i should be able to sum and gourp by interet rate and be good with the pool portion

SELECT 
    poolsforcurrfaceplat.cusip, 
    poolsforcurrfaceplat."interestRate", 
    poolsforcurrfaceplat."remainingBalance" - COALESCE(sumpoolcfinplat, 0) AS poolcfminuscfinplat
INTO TEMP TABLE poolcurrfaceminuscurrentfaceinplatt 
FROM poolsforcurrfaceplat
LEFT JOIN totalpoolcurrfaceinplatt
ON poolsforcurrfaceplat.cusip = totalpoolcurrfaceinplatt.poolcusip;



-- SELECT 
--     poolsforcurrfaceplat.cusip, 
--     poolsforcurrfaceplat."interestRate", 
--     poolsforcurrfaceplat."remainingBalance",
--     sumpoolcfinplat,  
--     poolsforcurrfaceplat."remainingBalance" - COALESCE(sumpoolcfinplat, 0) AS poolcfminuscfinplat
-- -- INTO TEMP TABLE poolcurrfaceminuscurrentfaceinplatt 
-- FROM poolsforcurrfaceplat
-- LEFT JOIN totalpoolcurrfaceinplatt
-- ON poolsforcurrfaceplat.cusip = totalpoolcurrfaceinplatt.poolcusip
-- WHERE "interestRate" = 9.5;

-- seems to be the sums

SELECT 
    "interestRate", 
    SUM(poolcfminuscfinplat) AS sumofpoolcfminusplatcf
INTO TEMP TABLE suminterestratepool
FROM poolcurrfaceminuscurrentfaceinplatt
GROUP BY "interestRate";



-- LIMIT 10;


-- LIMIT 10;

-- so now I get the current face of all the plats then join with the above table on interestRate then sum them and group them by interestRate??
-- yes but apperently we need to do the sameting about finding the currentface of a plat in another platt

-- so I think we are doing somethimg wrong but let me at least get the plat currface minus current face in other plats and then worry about how to combine them

-- so I think that if we are only adding a subsection of the plats then we should only look in those plats not all plats... but we can hash that out later 


-- this was just the basic info i used when doing it for pools the type in now SP instead of SF

SELECT   
    platinums.cusip,
    platinums.name,
    platinumbodies.indicator,
    platinumbodies.istbaelig,
    platinums.type,
    platinums.originalface,
    platinumbodies.interestrate,
    platinumbodies.remainingbalance,
    platinumbodies.factor,
    platinumbodies.date 
INTO TEMP TABLE platsforcurrfaceplat 
FROM platinums 
INNER JOIN platinumbodies
ON platinums.cusip = platinumbodies.cusip 
WHERE platinumbodies.date = '2021-08-01'
AND platinumbodies.indicator = 'M'
AND platinums.type = 'SP'
AND platinumbodies.istbaelig = 'true';

-- LIMIT 10;

--so this gets currentface of a plat in other plats, this is the second step i used for pools now to rearrange it  

SELECT 
    platsforcurrfaceplat.cusip AS platcusip, 
    platsforcurrfaceplat.remainingbalance / platsforcurrfaceplat.originalface as factortwo,
    (platcolls.faceinplatinum/100) * (platsforcurrfaceplat.remainingbalance /platsforcurrfaceplat.originalface) AS currfaceinotherplat 
INTO TEMP TABLE platlcurrfaceinotherplatt
FROM platcolls
INNER JOIN platsforcurrfaceplat
ON platsforcurrfaceplat.name = platcolls.poolname;

-- LIMIT 10;


-- just using this to check seems to check out 
-- SELECT 
--     *, 
--     (platcolls.faceinplatinum/100) * (platsforcurrfaceplat.remainingbalance /platsforcurrfaceplat.originalface) AS currfaceinplat, 
--     platsforcurrfaceplat.remainingbalance /platsforcurrfaceplat.originalface as factortwo
-- -- INTO TEMP TABLE poolcurrfaceinplatt
-- FROM platcolls
-- INNER JOIN platsforcurrfaceplat
-- ON platsforcurrfaceplat.name = platcolls.poolname
-- AND platsforcurrfaceplat.indicator = platcolls.indicator
-- WHERE platsforcurrfaceplat.cusip = '36225BNS3'
-- LIMIT 10;



---so this gets the sum of all of the plats current face in other plats grouped by the original plat cusip, seems to work 
SELECT 
    platlcurrfaceinotherplatt.platcusip, 
    SUM(platlcurrfaceinotherplatt.currfaceinotherplat) as sumplatcfinotherplat
INTO TEMP TABLE totalplatcurrfaceinotherplatt  
FROM platlcurrfaceinotherplatt
-- WHERE  platlcurrfaceinotherplatt.platcusip = '36225BNS3'
GROUP BY platlcurrfaceinotherplatt.platcusip;

-- LIMIT 10;


-- this should be the current face of all plats minus the current face in the other plats so should probably pair this down
-- so at this point i should be able to sum and gourp by interet rate and be good with the pool portion
-- and if I have the other table I can join them by interest rate sume them and group them by interest rate but does not seem right

SELECT 
    platsforcurrfaceplat.cusip, 
    platsforcurrfaceplat.interestrate, 
    platsforcurrfaceplat.remainingbalance - COALESCE(sumplatcfinotherplat, 0) AS platcfminuscfinotherplat
INTO TEMP TABLE platcurrfaceminuscurrentfaceinotherplatt 
FROM platsforcurrfaceplat
LEFT JOIN totalplatcurrfaceinotherplatt 
ON platsforcurrfaceplat.cusip = totalplatcurrfaceinotherplatt.platcusip;


-- now summing it up and grouping by interest rate 
-- SELECT 
--     interestrate, 
--     SUM(platcfminuscfinotherplat) 
-- FROM platcurrfaceminuscurrentfaceinotherplatt
-- GROUP BY interestrate
-- LIMIT 10;

-- a temp table for it  

SELECT 
    interestrate, 
    SUM(platcfminuscfinotherplat) AS sumplatcfminuscfinotherplat
INTO TEMP TABLE platinterestratesum
FROM platcurrfaceminuscurrentfaceinotherplatt
GROUP BY interestrate;



-------------

-- trying to combine both tables

-- ok
SELECT 
    suminterestratepool."interestRate" AS poolcoupon, 
    suminterestratepool.sumofpoolcfminusplatcf, 
    platinterestratesum.interestRate AS platcoupon, 
    platinterestratesum.sumplatcfminuscfinotherplat 
FROM suminterestratepool
FULL JOIN platinterestratesum
ON suminterestratepool."interestRate" = platinterestratesum.interestRate;

--- same thing as above but to copy
\COPY (SELECT suminterestratepool."interestRate" AS poolcoupon, suminterestratepool.sumofpoolcfminusplatcf, platinterestratesum.interestRate AS platcoupon, platinterestratesum.sumplatcfminuscfinotherplat FROM suminterestratepool FULL JOIN platinterestratesum ON suminterestratepool."interestRate" = platinterestratesum.interestRate) to 'C:\Users\micha\sizecheckone' csv header;

--it combines the two tables but are the two tables right 

SELECT 
    COALESCE(suminterestratepool."interestRate",  platinterestratesum.interestRate), 
    SUM(COALESCE(sumofpoolcfminusplatcf, 0) + COALESCE(platinterestratesum.sumplatcfminuscfinotherplat, 0)) AS poolweightplusplatweight
FROM suminterestratepool
FULL JOIN platinterestratesum
ON suminterestratepool."interestRate" = platinterestratesum.interestRate
GROUP BY suminterestratepool."interestRate", platinterestratesum.interestRate
ORDER BY suminterestratepool."interestRate" ASC;


--- same thing as above but to copy
\COPY (SELECT COALESCE(suminterestratepool."interestRate",  platinterestratesum.interestRate), SUM(COALESCE(sumofpoolcfminusplatcf, 0) + COALESCE(platinterestratesum.sumplatcfminuscfinotherplat, 0)) AS poolweightplusplatweight FROM suminterestratepool FULL JOIN platinterestratesum ON suminterestratepool."interestRate" = platinterestratesum.interestRate GROUP BY suminterestratepool."interestRate", platinterestratesum.interestRate ORDER BY suminterestratepool."interestRate" ASC) to 'C:\Users\micha\sizechecktwo' csv header;


LIMIT 10;

--  just checking should be fine

SELECT *
FROM platcurrfaceminuscurrentfaceinotherplatt
WHERE interestrate = 3

LIMIT 10;





--------------------
-- used this to check seems to work

SELECT 
    platsforcurrfaceplat.cusip, 
    platsforcurrfaceplat.interestrate,  
    platsforcurrfaceplat.remainingbalance, 
    platsforcurrfaceplat.remainingbalance - COALESCE(sumplatcfinotherplat, 0) as platcfminuscfinotherplat
-- INTO TEMP TABLE platcurrfaceminuscurrentfaceinotherplatt 
FROM platsforcurrfaceplat
LEFT JOIN totalplatcurrfaceinotherplatt 
ON platsforcurrfaceplat.cusip = totalplatcurrfaceinotherplatt.platcusip
WHERE totalplatcurrfaceinotherplatt.platcusip = '36225BNS3'
LIMIT 10;

SELECT * from pools INNER JOIN poolbodies ON pools.cusip = poolbodies.cusip WHERE pools.cusip = '36202CHS5';


5985.59 + 14492 + 21544.38 + 25293.81 + 27387.14


--------------------------------------
----------------CMOS

-- definitely plats in cmos


SELECT COUNT (*) 
FROM ofincmos
INNER JOIN platinums
ON platinums.cusip = ofincmos.cusip


-- current face of pool -  current face in CMOs +  current face Platinums

-- only pools with 

-- indicator = 'M' AND 
-- type = 'SF' AND 
-- istbaelig = 'true'

-- and then we are subtracting the current face of those pools in CMOs

-- Then adding the current face of platinums with 

-- indicator = 'M' AND 
-- type = 'SP' AND 
-- istbaelig = 'true'


--------------------------------------FED

-- smal amount of plats in fedholdings  

-- current face of pool -  current face in FED +  current face Platinums


SELECT COUNT (*) 
FROM fedholdings
INNER JOIN platinums
ON platinums.cusip = fedholdings.cusip


----------------- AUGYST Pools current face summed by coupon


 interestRate |        sum
--------------+--------------------
            1 |         1074750.93
          1.5 |      4930417401.09
            2 |    335990945550.57
          2.5 |  357631597895.8399
            3 |  314883151650.5401
          3.5 | 256736112762.39996
            4 | 116902060849.51997
          4.5 |  48336702802.24001
         4.75 |        11319669.24
            5 | 18281904620.450012
          5.1 |          226205.49
         5.25 |          100040.41
         5.45 | 339856.76999999996
          5.5 |  5457388170.369996
          5.6 |           36319.86
         5.75 |          125371.99
            6 | 3114617566.0199986
          6.1 |            4478.38
        6.375 |           22060.95
         6.49 |            1718.56
          6.5 | 1262683517.8999994
         6.65 |          156448.53
         6.69 |            8575.36
         6.75 | 55792.740000000005
         6.88 |  89739.45000000001
            7 | 227066661.71999994
         7.25 |          109352.72
        7.265 |             950.42
         7.45 |           73157.33
          7.5 |  67955386.14999999
         7.75 |             7911.9
          7.8 |           68571.15
         7.85 |            9079.53
        7.875 |            27312.8
          7.9 |           19252.66
            8 | 30898579.909999996
         8.25 |           40231.21
          8.5 | 4544726.9399999995
            9 |  706706.5199999999
          9.5 |           92552.21