-- this does a pretty good job... if I am going to change it in the future it would be better to break it up
-- into smaller more readable chunks if we feel confident it does not need to be touched for at least a year or so
-- we should be fine 

-- ideally the output would say ginnie one or ginnie two because I forget which is which... 

-- So we want two reports one for pools with Type = "SF' and Indicator = 'M" G2
-- I wonder if I can do G1 and G2 at the same time....or maybe just make indicator varibale..

-- ONLY WANT TBA ELIG ONES FOR MONTH M

-- now with variables


create or replace PROCEDURE outputpools(currentmonth DATE, feddate DATE, _indicator VARCHAR)
language plpgsql
as
$$
declare
   numberofnegatives INTEGER;
   futuremonth DATE := currentmonth + interval '1 month' * 1;
   pastmonth DATE := currentmonth - interval '1 month' * 1;
   twomonthspast DATE := currentmonth - interval '1 month' * 2;
begin


DROP TABLE IF EXISTS 
  poolscurr, currentactualcpr, currentactualcdr, pastactualcpr, poolpredictionscurr, 
  poolfhavascurr, ofinplatinum, ofpoolincmo, fedholdingscurr, pooldataforweb,  
  poolswithnegativefloat, poolpastpredictions, poolpredictionsfuture,  futureactualcpr,
  pooltwomonthspastpredictions, pooldataforwebtwo, pooldataforwebthree, twomonthpastactualcpr, futureactualcdr,
  pooldataforwebfour, futureactualcdr, pooldataforwebfour, cdrpredictionscurr, cdrpredictionsfuture, pooldataforwebfive;


  -- cusip, name, indicator, type, issuedate, currface, coupon, gwac, wala, wam, date
  CREATE TEMP TABLE poolscurr AS
  SELECT   
      pools.cusip,
      pools.name,
      pools.indicator,
      pools.type,
      pools.issuedate,
      pools.originalface,
      poolbodies."remainingBalance" AS currface,
      poolbodies."remainingBalance" / pools.originalface AS factor, 
      poolbodies."interestRate" AS coupon,
      poolbodies."GWAC" AS gwac,
      poolbodies."WAM" AS wam,
      poolbodies."WALA" AS wala,
      poolbodies.date 
  FROM pools 
  INNER JOIN poolbodies
  ON pools.cusip = poolbodies.cusip 
  WHERE poolbodies.date =  currentmonth
  AND pools.indicator =  _indicator
  AND pools.type = 'SF'
  AND pools.istbaelig IS TRUE;

  RAISE NOTICE 'CREATED TEMP TABLE';
  
  -- Measured in pennies
  CREATE TEMP TABLE ofinplatinum AS
  SELECT 
      count(*),
      poolname,
      indicator,
      SUM(faceinplatinum/100) as ofinplat 
  FROM platcolls
  WHERE born <=  currentmonth
  GROUP BY poolname, indicator;

  -- adding original face in cmos 
  -- SO we use the CMOS for month M-1 though just using Month M seems fine too
  CREATE TEMP TABLE ofpoolincmo AS
  SELECT
      cusip,
      SUM(faceincmo) AS ofincmo
  FROM uniqueofincmos
  WHERE date <=  pastmonth
  -- Probably just not collapsed?? but I guess there could be a scenario where one collapses in the future
  AND ( collapsed >  pastmonth OR collapsed IS NULL) 
  GROUP BY cusip;

  --temp table, fed holdings has only one per pool?? I guess so 
  -- SO Month M + 1.5
  CREATE TEMP TABLE fedholdingscurr AS
  SELECT * 
  FROM fedholdings
  WHERE fedholdings.asofdate =  feddate;

  CREATE TEMP TABLE poolfhavascurr AS
  SELECT *
  FROM poolfhavas
  WHERE poolfhavas.date =  currentmonth;

  RAISE NOTICE 'PUTTING IT ALL TOGTHER';
    
  -- cusip,name,indicator,type,issuedate,currface,cfincmo,cfinfed,cfinplat,coupon,gwac,wala,wam,va,
  CREATE TEMP TABLE pooldataforweb AS
  SELECT
    poolscurr.cusip,
    poolscurr.name,
    poolscurr.indicator,
    poolscurr.type,
    poolscurr.issuedate,
    poolscurr.currface,
    ofpoolincmo.ofincmo * poolscurr.factor AS cfincmo,
    fedholdingscurr.currentfacevalue AS cfinfed,
    ofinplatinum.ofinplat * poolscurr.factor AS cfinplat,
    poolscurr.coupon,
    poolscurr.gwac,
    poolscurr.wala,
    poolscurr.wam,
    poolfhavascurr.va,
    poolscurr.date
  FROM poolscurr
  LEFT JOIN poolfhavascurr ON (poolscurr.cusip = poolfhavascurr.cusip)
  LEFT JOIN ofinplatinum 
    ON poolscurr.name = ofinplatinum.poolname
    AND poolscurr.indicator = ofinplatinum.indicator
  LEFT JOIN ofpoolincmo ON poolscurr.cusip = ofpoolincmo.cusip 
  LEFT JOIN fedholdingscurr ON poolscurr.cusip = fedholdingscurr.cusip;  

  RAISE NOTICE 'CREATED TEMP TABLE'; 

  -- this is only used for the primilinary CPRS
  CREATE TEMP TABLE futureactualcpr AS
  SELECT actualcprs.cusip, actualcprs.actualcpr
  FROM actualcprs
  INNER JOIN pooldataforweb
  ON pooldataforweb.cusip = actualcprs.cusip
  WHERE actualcprs.date = futuremonth;

  CREATE TEMP TABLE currentactualcpr AS
  SELECT actualcprs.cusip, actualcprs.actualcpr
  FROM actualcprs
  INNER JOIN pooldataforweb
  ON pooldataforweb.cusip = actualcprs.cusip
  WHERE actualcprs.date =  currentmonth;

  CREATE TEMP TABLE pastactualcpr AS
  SELECT actualcprs.cusip, actualcprs.actualcpr
  FROM actualcprs
  INNER JOIN pooldataforweb
  ON pooldataforweb.cusip = actualcprs.cusip
  WHERE actualcprs.date =  pastmonth;

  CREATE TEMP TABLE twomonthpastactualcpr AS
  SELECT actualcprs.cusip, actualcprs.actualcpr
  FROM actualcprs
  INNER JOIN pooldataforweb
  ON pooldataforweb.cusip = actualcprs.cusip
  WHERE actualcprs.date =  twomonthspast;

  -- twomonthspastactcpr, pastactcpr,cpr,cprnext,
  CREATE TEMP TABLE pooldataforwebtwo AS
  SELECT
    pooldataforweb.cusip,
    pooldataforweb.name,
    pooldataforweb.indicator,
    pooldataforweb.type,
    pooldataforweb.issuedate,
    pooldataforweb.currface,
    pooldataforweb.cfincmo,
    pooldataforweb.cfinfed,
    pooldataforweb.cfinplat,
    pooldataforweb.coupon,
    pooldataforweb.gwac,
    pooldataforweb.wala,
    pooldataforweb.wam,
    pooldataforweb.va,
    twomonthpastactualcpr.actualcpr AS twomonthspastactcpr,
    pastactualcpr.actualcpr AS pastactcpr,
    currentactualcpr.actualcpr AS curractualcpr,
    futureactualcpr.actualcpr AS cpractnext,
    pooldataforweb.date
  FROM pooldataforweb  
  LEFT JOIN twomonthpastactualcpr ON (pooldataforweb.cusip = twomonthpastactualcpr.cusip)
  LEFT JOIN pastactualcpr ON (pooldataforweb.cusip = pastactualcpr.cusip)
  LEFT JOIN currentactualcpr ON (pooldataforweb.cusip = currentactualcpr.cusip)
  LEFT JOIN futureactualcpr ON (pooldataforweb.cusip = futureactualcpr.cusip)
  WHERE currface - COALESCE(cfincmo, 0) - COALESCE(cfinfed, 0) - COALESCE(cfinplat, 0) > 1;
  
  RAISE NOTICE 'CREATED TEMP TABLE';

  -- for the residulas
  CREATE TEMP TABLE pooltwomonthspastpredictions AS
  SELECT poolpredictions.cusip, poolpredictions.cpr
  FROM poolpredictions
  INNER JOIN pooldataforwebtwo
  ON pooldataforwebtwo.cusip = poolpredictions.cusip
  WHERE poolpredictions.date = twomonthspast;

  -- for the residulas
  CREATE TEMP TABLE poolpastpredictions AS
  SELECT poolpredictions.cusip, poolpredictions.cpr
  FROM poolpredictions
  INNER JOIN pooldataforwebtwo
  ON pooldataforwebtwo.cusip = poolpredictions.cusip
  WHERE poolpredictions.date = pastmonth;

  -- for the residulas
  CREATE TEMP TABLE poolpredictionscurr AS
  SELECT poolpredictions.cusip, poolpredictions.cpr
  FROM poolpredictions
  INNER JOIN pooldataforwebtwo
  ON pooldataforwebtwo.cusip = poolpredictions.cusip
  WHERE poolpredictions.date = currentmonth;

  -- we will show the two months of predictions
  CREATE TEMP TABLE poolpredictionsfuture AS
  SELECT poolpredictions.cusip, poolpredictions.cpr, poolpredictions."cprNext"
  FROM poolpredictions
  INNER JOIN pooldataforwebtwo
  ON pooldataforwebtwo.cusip = poolpredictions.cusip
  WHERE poolpredictions.date = futuremonth;

  -- twomonthspastpredictedcpr, cprpastprediction, currcprprediction, futurecprprediction, futurecprnextprediction

  CREATE TEMP TABLE pooldataforwebthree AS
  SELECT
    pooldataforwebtwo.cusip,
    pooldataforwebtwo.name,
    pooldataforwebtwo.indicator,
    pooldataforwebtwo.type,
    pooldataforwebtwo.issuedate,
    pooldataforwebtwo.currface,
    pooldataforwebtwo.cfincmo,
    pooldataforwebtwo.cfinfed,
    pooldataforwebtwo.cfinplat,
    pooldataforwebtwo.coupon,
    pooldataforwebtwo.gwac,
    pooldataforwebtwo.wala,
    pooldataforwebtwo.wam,
    pooldataforwebtwo.va,
    pooldataforwebtwo.twomonthspastactcpr,
    pooldataforwebtwo.pastactcpr,
    pooldataforwebtwo.curractualcpr,
    pooldataforwebtwo.cpractnext,
    pooltwomonthspastpredictions.cpr AS twomonthspastpredictedcpr,
    poolpastpredictions.cpr AS pastpredictedcpr,
    poolpredictionscurr.cpr AS currpredictedcpr,
    poolpredictionsfuture.cpr AS futurepredictedcpr,
    poolpredictionsfuture."cprNext" AS futurepredictedcprnext,
    pooldataforwebtwo.date
  FROM pooldataforwebtwo  
  LEFT JOIN pooltwomonthspastpredictions ON (pooldataforwebtwo.cusip = pooltwomonthspastpredictions.cusip)
  LEFT JOIN poolpastpredictions ON (pooldataforwebtwo.cusip = poolpastpredictions.cusip)
  LEFT JOIN poolpredictionscurr ON (pooldataforwebtwo.cusip = poolpredictionscurr.cusip)
  LEFT JOIN poolpredictionsfuture ON (pooldataforwebtwo.cusip = poolpredictionsfuture.cusip);

  -- cprtwomonthspastprediction, cprpastprediction, currcprprediction, futurecprprediction, futurecprnextprediction
  
  -- RAISE NOTICE 'CREATED TEMP TABLE';

  CREATE TEMP TABLE currentactualcdr AS
  SELECT actualcdrs.cusip, actualcdrs.cdr as curractualcdr
  FROM actualcdrs
  INNER JOIN pooldataforwebtwo
  ON pooldataforwebtwo.cusip = actualcdrs.cusip
  WHERE actualcdrs.date =  currentmonth;
  -- LIMIT 1;

  CREATE TEMP TABLE futureactualcdr AS
  SELECT actualcdrs.cusip, actualcdrs.cdr AS futureactualcdr
  FROM actualcdrs
  INNER JOIN pooldataforwebtwo
  ON pooldataforwebtwo.cusip = actualcdrs.cusip
  WHERE actualcdrs.date =  futuremonth;

  CREATE TEMP TABLE pooldataforwebfour AS
  SELECT 
    pooldataforwebthree.cusip,
    pooldataforwebthree.name,
    pooldataforwebthree.indicator,
    pooldataforwebthree.type,
    pooldataforwebthree.issuedate,
    pooldataforwebthree.currface,
    pooldataforwebthree.cfincmo,
    pooldataforwebthree.cfinfed,
    pooldataforwebthree.cfinplat,
    pooldataforwebthree.coupon,
    pooldataforwebthree.gwac,
    pooldataforwebthree.wala,
    pooldataforwebthree.wam,
    pooldataforwebthree.va,
    pooldataforwebthree.twomonthspastactcpr,
    pooldataforwebthree.pastactcpr,
    pooldataforwebthree.curractualcpr,
    pooldataforwebthree.cpractnext,
    pooldataforwebthree.twomonthspastpredictedcpr,
    pooldataforwebthree.pastpredictedcpr,
    pooldataforwebthree.currpredictedcpr,
    pooldataforwebthree.futurepredictedcpr,
    pooldataforwebthree.futurepredictedcprnext,
    currentactualcdr.curractualcdr,
    futureactualcdr.futureactualcdr,
    pooldataforwebthree.date
  FROM pooldataforwebthree  
  LEFT JOIN futureactualcdr ON (pooldataforwebthree.cusip = futureactualcdr.cusip)
  LEFT JOIN currentactualcdr ON (pooldataforwebthree.cusip = currentactualcdr.cusip);

  -- -- cdr,currcdrprediction,cdrprediction,date
  CREATE TEMP TABLE cdrpredictionscurr AS
  SELECT poolpredictions.cusip, poolpredictions.cdr AS currcdrprediction
  FROM poolpredictions
  INNER JOIN pooldataforwebtwo
  ON pooldataforwebtwo.cusip = poolpredictions.cusip
  WHERE poolpredictions.date = currentmonth;

  -- we will show the two months of predictions
  CREATE TEMP TABLE cdrpredictionsfuture AS
  SELECT poolpredictions.cusip, poolpredictions.cdr AS futurecdrprediction
  FROM poolpredictions
  INNER JOIN pooldataforwebtwo
  ON pooldataforwebtwo.cusip = poolpredictions.cusip
  WHERE poolpredictions.date = futuremonth;


  CREATE TEMP TABLE pooldataforwebfive AS
  SELECT 
      pooldataforwebfour.cusip,
      pooldataforwebfour.name,
      pooldataforwebfour.indicator,
      pooldataforwebfour.type,
      pooldataforwebfour.issuedate,
      pooldataforwebfour.currface,
      pooldataforwebfour.cfincmo,
      pooldataforwebfour.cfinfed,
      pooldataforwebfour.cfinplat,
      pooldataforwebfour.coupon,
      pooldataforwebfour.gwac,
      pooldataforwebfour.wala,
      pooldataforwebfour.wam,
      pooldataforwebfour.va,
      pooldataforwebfour.twomonthspastactcpr,
      pooldataforwebfour.pastactcpr,
      pooldataforwebfour.curractualcpr,
      pooldataforwebfour.cpractnext,
      pooldataforwebfour.twomonthspastpredictedcpr,
      pooldataforwebfour.pastpredictedcpr,
      pooldataforwebfour.currpredictedcpr,
      pooldataforwebfour.futurepredictedcpr,
      pooldataforwebfour.futurepredictedcprnext,
      pooldataforwebfour.curractualcdr,
      pooldataforwebfour.futureactualcdr,
      cdrpredictionscurr.currcdrprediction,
      cdrpredictionsfuture.futurecdrprediction,
      pooldataforwebfour.date
  FROM pooldataforwebfour  
  LEFT JOIN cdrpredictionscurr ON (pooldataforwebfour.cusip = cdrpredictionscurr.cusip)
  LEFT JOIN cdrpredictionsfuture ON (pooldataforwebfour.cusip = cdrpredictionsfuture.cusip);

  -- this gets all the pools, eventually will want to limit it to pools with float 

  -- \COPY (SELECT * FROM pooldataforwedfive) to 'C:\Users\micha\g1poolswithcurrfloat' csv header;

  EXECUTE 'COPY (SELECT * FROM pooldataforwebfive) to ''C:\Users\Public\poolswithcurrfloat' || _indicator || ''' csv header';

  ---------pools with negative current face 
  CREATE TEMP TABLE poolswithnegativefloat AS
  SELECT 
    cusip,
    currface - COALESCE(cfincmo, 0) - COALESCE(cfinfed, 0) - COALESCE(cfinplat, 0) AS minus,
    currface,
    cfincmo,
    cfinfed,
    cfinplat
  FROM pooldataforweb
  WHERE currface - COALESCE(cfincmo, 0) - COALESCE(cfinfed, 0) - COALESCE(cfinplat, 0) < -1
  ORDER BY currface - COALESCE(cfincmo, 0) - COALESCE(cfinfed, 0) - COALESCE(cfinplat, 0) ASC;

  EXECUTE 'COPY (SELECT * FROM poolswithnegativefloat) to ''C:\Users\Public\poolswithnegativefloat' || _indicator || ''' csv header';

  SELECT COUNT(*)
  INTO  numberofnegatives 
  FROM poolswithnegativefloat;

  -- is the plats for 36179VKJ8 terminated or something..

  RAISE NOTICE '%', numberofnegatives; 

DROP TABLE IF EXISTS 
  poolscurr, currentactualcpr, currentactualcdr, pastactualcpr, poolpredictionscurr, 
  poolfhavascurr, ofinplatinum, ofpoolincmo, fedholdingscurr, pooldataforweb,  
  poolswithnegativefloat, poolpastpredictions, poolpredictionsfuture,  futureactualcpr,
  pooltwomonthspastpredictions, pooldataforwebtwo, pooldataforwebthree, twomonthpastactualcpr, futureactualcdr,
  pooldataforwebfour, futureactualcdr, pooldataforwebfour, cdrpredictionscurr, cdrpredictionsfuture, pooldataforwebfive;


end;

$$;


call outputpools( '2021-11-01', '2021-12-08', 'M');

call outputpools( '2021-11-01', '2021-12-08', 'X');


call outputpools('2021-11-01', '2021-10-01', '2021-09-01', '2021-12-01', 'M');


call outputpools('2021-11-01', '2021-10-01', '2021-09-01', '2021-12-01', 'X');


  -- SELECT * 
  -- FROM uniqueofincmos 
  -- WHERE cusip IN ( '36203LT28', '36223NXZ2', '36224JNE8',  
  --   '36203QC66', '36203LXA5', '36203GF99',  '36224SHV7', '36224TLK4', '36203NRN0', 
  --   '36203AUX2', '36223WQM9', '36224KR43', '36223MAP1', '36203HCS8', '36224X6X4', '36203JHT7' )
  -- AND collapsed IS NULL 
  -- ORDER BY cmo;


-- just counting the ones that still have float 
SELECT COUNT (*)
FROM pooldataforweb
WHERE currface - COALESCE(cfincmo, 0) - COALESCE(cfinfed, 0) - COALESCE(cfinplat, 0) > 1;

-- counting the ones that have negative float this should not happen 
SELECT COUNT(*)
FROM pooldataforweb
WHERE currface - COALESCE(cfincmo, 0) - COALESCE(cfinfed, 0) - COALESCE(cfinplat, 0) < -1
LIMIT 10;

SELECT *,
  currface - COALESCE(cfincmo, 0) - COALESCE(cfinfed, 0) - COALESCE(cfinplat, 0) AS float
FROM pooldataforweb
WHERE currface - COALESCE(cfincmo, 0) - COALESCE(cfinfed, 0) - COALESCE(cfinplat, 0) < -1
ORDER BY currface - COALESCE(cfincmo, 0) - COALESCE(cfinfed, 0) - COALESCE(cfinplat, 0) ASC
LIMIT 100;


 
\COPY (SELECT cusip FROM pools WHERE type = 'SF' and indicator = 'M') to 'C:\Users\micha\g2mwithcurrentfloat' csv header;

\COPY (SELECT cusip FROM pools WHERE type = 'SF' and indicator = 'C') to 'C:\Users\micha\g2c' csv header;

\COPY (SELECT cusip FROM pools where indicator = 'X') to 'C:\Users\micha\g1x' csv header;

\COPY (SELECT * FROM g1s) to 'C:\Users\micha\g1xwithcurrfloat' csv header;

SELECT cusip
FROM pools
WHERE type = 'SF'
and indicator = 'M'
LIMIT 2;


SELECT cusip
FROM pools
WHERE type = 'SF'
and indicator = 'M'
LIMIT 2;


\COPY (SELECT cusip FROM pools where indicator = 'X') to 'C:\Users\micha\g1x' csv header;








update salereg1 
\set expdate = '2021-10-01' + interval '1 month' * 2;