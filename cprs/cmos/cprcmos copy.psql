
-- THE FORMULA 

-- SMM = 1 - Power( 1 - CPR / 100, 1/12 ) 


-- CPR = 1 - power( 1- SMM, 12 )


-- Step 1 :   Current face of each CMO for month m (Just calcilated that so I can probably use it )


-- = sum   original face of pool i in the CMO * factor of pool i for month m


-- Step 2 :   Weight of each pool i in CMO for the month m 


-- = original face of pool i in the CMO * factor of pool i for month m  /  Current face of CMO for month m


-- Step 3 :   SMM of CMO for month m+1


-- = sum weight of each pool i for month m  * SMM of pool i for month m+1


-- Step 4 : CPR of the CMO for month m+1


-- Use SMM to CPR formula

\set futuremonth 'date ''2021-11-01'''
\set currentmonth 'date ''2021-10-01'''


-- Step 1 :   Current face of each CMO for month m (Just calcilated that so I can probably use it )
-- Is essentailly done should be good now

SELECT 
  uniqueofincmos.cmo,
  cusip,
  faceincmo,
  currface,
  cmos.date
INTO TEMP TABLE cmocurrface
FROM cmos
INNER JOIN uniqueofincmos
ON cmos.cmo = uniqueofincmos.cmo
WHERE cmos.date = :currentmonth
AND collapsed IS NULL;

-- Step 2 :   Weight of each pool i in CMO for the month m 

-- = original face of pool i in the CMO * factor of pool i for month m  /  Current face of CMO for month m

-- so we still need to redo a bunch of it

SELECT
    pools.cusip,
    poolbodies."remainingBalance" / pools.originalface AS factor
INTO TEMP TABLE currpools 
FROM pools
INNER JOIN poolbodies ON pools.cusip = poolbodies.cusip
WHERE poolbodies.date = :currentmonth;

-- what we need from plats

SELECT
    platinums.cusip,
    platinumbodies.remainingbalance / platinums.originalface AS factor,
    cpr
INTO TEMP TABLE currplats
FROM platinums
INNER JOIN platinumbodies ON platinums.cusip = platinumbodies.cusip
WHERE platinumbodies.date = :currentmonth;

-- combining the two to get current face of plats or pools?? for month m 


SELECT
    cmo,
    cmocurrface.cusip,
    (faceincmo * currpools.factor) / currface AS weightofpool,
    (faceincmo * currplats.factor) / currface AS weightofplat
INTO TEMP TABLE weightofpoolsandplats
FROM cmocurrface
LEFT JOIN currpools
ON cmocurrface.cusip = currpools.cusip
LEFT JOIN currplats
ON cmocurrface.cusip = currplats.cusip;


-- weights are adding up to 1
-- SELECT 
--     cmo,
--     SUM(COALESCE(weightofpool, 0) + COALESCE(weightofplat, 0))
-- INTO TEMP TABLE testingweights    
-- FROM weightofpoolsandplats
-- GROUP BY cmo;
-- -- ORDER BY SUM(COALESCE(weightofpool, 0) + COALESCE(weightofplat, 0)) DESC 
-- HAVING SUM(COALESCE(weightofpool, 0) + COALESCE(weightofplat, 0)) < 1
-- LIMIT 5;

-- SELECT * 
-- FROM testingweights
-- WHERE sum < .99 
-- ORDER BY sum DESC;


-- Step 3 :   SMM of CMO for month m+1


-- = sum weight of each pool i for month m  * SMM of pool i for month m+1
-- SMM = 1 - Power( 1 - CPR / 100, 1/12 ) 

SELECT 
    cusip,
    actualcpr
INTO TEMP TABLE currpoolcprs
FROM actualcprs
WHERE date = :currentmonth;


SELECT 
  --  COUNT(*)
    cmo,
    weightofpoolsandplats.cusip,
    COALESCE (weightofpool, weightofplat, 0) AS weightofpool,
    COALESCE (currpoolcprs.actualcpr, currplats.cpr, 0) AS cpr
INTO TEMP TABLE weightofpoolsandplatswithcpr
FROM weightofpoolsandplats
LEFT JOIN currpoolcprs
ON weightofpoolsandplats.cusip = currpoolcprs.cusip
LEFT JOIN currplats
ON weightofpoolsandplats.cusip = currplats.cusip;
-- WHERE currplats.cusip is not null
-- LIMIT 5;

-- SELECT
--     cmo,
--     SUM(weightofpool)
-- FROM weightofpoolsandplatswithcpr
-- GROUP BY cmo
-- HAVING SUM(weightofpool) < .99
-- ORDER BY SUM(weightofpool) DESC
-- LIMIT 5;

-- SMM = 1 - Power( 1 - CPR / 100, 1/12 ) 

-- Step 3 :   SMM of CMO for month m+1


-- = sum weight of each pool i for month m  * SMM of pool i for month m+1

SELECT 
    cmo,
    (
    1 -(
      POWER(
        (1 -(cpr)),
        (cast(1 as float) / cast(12 as float))
      )
    )
  ) AS smm,
  weightofpool * (
    1 -(
      POWER(
        (1 -(cpr)),
        (cast(1 as float) / cast(12 as float))
      )
    )
  ) AS weightxsmm
INTO cmoweightxsmm  
FROM weightofpoolsandplatswithcpr;
-- LIMIT 5;  

SELECT 
    cmo,
    SUM(weightxsmm)
INTO TEMP TABLE stepthree
FROM cmoweightxsmm
GROUP BY cmo;

-- not sure if sum (ssm) is suppoed to be divided by 100
-- ones i sent david were 
SELECT 
  cmo, 
  (1 - POWER((1 - (sum)), 12)) AS cpr 
INTO stepfour  
FROM stepthree 
ORDER BY cmo DESC;



SELECT
  almoststepthreecmos.cmo,
  -- not sure why we divide by 100
  SUM(
    COALESCE(almoststepthreecmos.weightxpoolssm, 0) + COALESCE(almoststepthreecmos.weightxplatssm, 0)
  ) / 100 AS smm
INTO TEMP TABLE stepthreecmos
FROM almoststepthreecmos
GROUP BY
  almoststepthreecmos.cmo;

-- LIMIT 3;

        -- CREATE TEMP TABLE stepfour AS
        -- SELECT 
        --     platinumcusip, 
        --     (1 - POWER((1 - smm), 12)) AS cpr 
        -- FROM stepthree;



\COPY (SELECT cmo, (1 - POWER((1 - smm), 12)) AS cpr FROM stepthreecmos ORDER BY cmo DESC) to 'C:\Users\micha\cmocpr' csv header; 


