
-- SHould innclude something about what need to be loads 

-- for this i think we just need pools, plats and platcolls all on the same page 

-- platinum cprs need to be calculated first 

-- once everything is loaded and dates changes this can be copied and pasted and we are good to go

-- THE FORMULA 

-- SMM = 1 - Power( 1 - CPR / 100, 1/12 ) 


-- CPR = 1 - power( 1- SMM, 12 )


-- Step 1 :   Current face of each CMO for month m 


-- = sum   original face of pool i in the CMO * factor of pool i for month m


-- Step 2 :   Weight of each pool i in CMO for the month m 


-- = original face of pool i in the CMO * factor of pool i for month m  /  Current face of CMO for month m


-- Step 3 :   SMM of CMO for month m+1


-- = sum weight of each pool i for month m  * SMM of pool i for month m+1


-- Step 4 : CPR of the CMO for month m+1


-- Use SMM to CPR formula

SELECT
    pools.cusip,
    pools.name,
    pools.indicator,
    pools.originalface,
    poolbodies."remainingBalance"
INTO TEMP TABLE currpoolscpr 
FROM
    pools
    INNER JOIN poolbodies ON pools.cusip = poolbodies.cusip
WHERE
    poolbodies.date = '2021-06-01';


-- what we need from plats

SELECT
    platinums.cusip,
    platinums.name,
    platinums.originalface,
    platinumbodies.remainingbalance
INTO TEMP TABLE currplatscpr 
FROM
    platinums
    INNER JOIN platinumbodies ON platinums.cusip = platinumbodies.cusip
WHERE
    platinumbodies.date = '2021-06-01';


-- combining the two to get current face of plats or pools?? for month m 

SELECT
    ofincmos.cmo,
    ofincmos.cusip,
    ofincmos.faceincmo,
    -- not realy sure how we are using date 
    ofincmos.date,
    currpoolscpr.cusip as poolcusip,
    currpoolscpr."remainingBalance" / currpoolscpr.originalface AS poolfactor,
    ofincmos.faceincmo * (
    currpoolscpr."remainingBalance" / currpoolscpr.originalface
    ) AS ofxfactor,
    currplatscpr.cusip  as platinplatcusip,
    currplatscpr.remainingbalance / currplatscpr.originalface AS platfactor,
    ofincmos.faceincmo * (
    currplatscpr.remainingbalance / currplatscpr.originalface
    ) AS ofplatxfactor
INTO TEMP TABLE ofxfactorcprcmo
FROM
    ofincmos
LEFT JOIN currpoolscpr 
ON ofincmos.cusip = currpoolscpr.cusip
LEFT JOIN currplatscpr 
ON ofincmos.cusip = currplatscpr.cusip
WHERE
    (
    currpoolscpr.cusip IS NOT NULL
    OR currplatscpr.cusip IS NOT NULL
    );

-- curent face of ech cmo STEP 1

SELECT
  cmo,
  SUM(
    COALESCE(ofxfactor, 0) + COALESCE(ofplatxfactor, 0)
  ) / 100 AS currface
INTO TEMP TABLE cmocurrfacecpr
FROM ofxfactorcprcmo
-- WHERE cmo = '1999-004-1'
GROUP BY
  cmo;

-- just adding cpr to pools but it is july's do I have plats for june or july??

 SELECT
  currpoolscpr.cusip,
  currpoolscpr.name,
  currpoolscpr.indicator,
  currpoolscpr.originalface,
  currpoolscpr."remainingBalance",
  actualcprs.actualcpr
INTO TEMP TABLE currpoolscprwactual  
FROM
  currpoolscpr
-- I guess it needs to be inner join becuase we need a cpr??
-- this is where I had to deal with a null value I believe  
INNER JOIN actualcprs ON currpoolscpr.cusip = actualcprs.cusip
WHERE actualcprs.date = '2021-07-01';


-- cpr to platinums probably could have added them into the first table

SELECT
  platinums.cusip,
  platinums.name,
  platinums.originalface,
  platinumbodies.remainingbalance,
  platinumbodies.cpr
INTO TEMP TABLE currplatswithcpr
FROM
  platinums
  INNER JOIN platinumbodies ON platinums.cusip = platinumbodies.cusip
WHERE
  date = '2021-06-01';



-- Step 2 :   Weight of each pool i in CMO for the month m 


-- = original face of pool i in the CMO * factor of pool i for month m  /  Current face of CMO for month m


SELECT
  ofxfactorcprcmo.cmo,
  ofxfactorcprcmo.cusip,
  ofxfactorcprcmo.ofxfactor,
  ofxfactorcprcmo.ofplatxfactor,
  ofxfactor/currface AS weightofpool,
  ofplatxfactor/currface AS weightofplat
INTO TEMP TABLE weightofpoolorplatincmo
-- so I should be able to make this it's own table limit by born date and be fine
FROM
    ofxfactorcprcmo
-- should this be an inner join... they should have the same amount they are the same amount
INNER JOIN cmocurrfacecpr 
ON ofxfactorcprcmo.cmo = cmocurrfacecpr.cmo
-- I assume this is ok current face is zero so we no longer care about it
WHERE cmocurrfacecpr.currface > 0;

-- LIMIT 2;

-- SMM = 1 - Power( 1 - CPR / 100, 1/12 ) 

-- Step 3 :   SMM of CMO for month m+1


-- = sum weight of each pool i for month m  * SMM of pool i for month m+1


SELECT
  weightofpoolorplatincmo.cmo,
  weightofpoolorplatincmo.cusip,
  currpoolscprwactual.cusip as poolcusip,
  currpoolscprwactual.actualcpr,
  weightofpoolorplatincmo.weightofpool,
  (
    1 -(
      POWER(
        (1 -(currpoolscprwactual.actualcpr)),
        (cast(1 as float) / cast(12 as float))
      )
    )
  ) AS poolsmm,
  weightofpool * (
    1 -(
      POWER(
        (1 -(currpoolscprwactual.actualcpr)),
        (cast(1 as float) / cast(12 as float))
      )
    )
  ) as weightxpoolssm,
  currplatswithcpr.cusip as platcusip,
  weightofpoolorplatincmo.weightofplat,
  currplatswithcpr.cpr AS platcpr,
  (
    1 -(
      POWER(
        (1 -(currplatswithcpr.cpr)),
        (cast(1 as float) / cast(12 as float))
      )
    )
  ) AS platsmm,
  weightofplat * (
    1 -(
      POWER(
        (1 -(currplatswithcpr.cpr)),
        (cast(1 as float) / cast(12 as float))
      )
    )
  ) as weightxplatssm
INTO TEMP TABLE almoststepthreecmos
-- would need to use same table here  
FROM
  weightofpoolorplatincmo
LEFT JOIN currpoolscprwactual
  ON weightofpoolorplatincmo.cusip = currpoolscprwactual.cusip
LEFT JOIN currplatswithcpr 
  ON weightofpoolorplatincmo.cusip = currplatswithcpr.cusip;
-- WHERE currplatswithcpr.cusip IS NOT NULL


----------

SELECT
  almoststepthreecmos.cmo,
  -- not sure why we divide by 100
  SUM(
    COALESCE(almoststepthreecmos.weightxpoolssm, 0) + COALESCE(almoststepthreecmos.weightxplatssm, 0)
  ) / 100 AS smm
INTO TEMP TABLE stepthreecmos
FROM almoststepthreecmos
GROUP BY
  almoststepthreecmos.cmo;

-- LIMIT 3;



\COPY (SELECT cmo, (1 - POWER((1 - smm), 12)) AS cpr FROM stepthreecmos ORDER BY cmo DESC) to 'C:\Users\micha\cmocpr' csv header; 


