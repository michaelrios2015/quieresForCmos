-- Case 1 :  Size check. For Pools Are we getting the same TBA sizes at eMBS

-- More or less yes. I will double check a few things

-- should be this 
-------------------This hopefully gets us the sum of the current face grouped by coupon for certain pools

-- the pools and poolbodies
SELECT   
    pools.cusip,
    pools.name,
    pools.indicator,
    pools.type,
    pools.originalface,
    poolbodies."interestRate",
    poolbodies."remainingBalance",
    poolbodies.factor,
    poolbodies.date 
INTO TEMP TABLE poolsforcurrfaceplat 
FROM pools 
INNER JOIN poolbodies
ON pools.cusip = poolbodies.cusip 
WHERE poolbodies.date = '2021-08-01'
AND pools.indicator = 'M'
AND pools.type = 'SF'
AND pools.istbaelig = 'true';


--  so this is preety simple we just sum current face and group by interest rate 
SELECT 
    poolsforcurrfaceplat."interestRate", 
    SUM(poolsforcurrfaceplat."remainingBalance")
INTO TEMP TABLE poolscfbycoupon
FROM poolsforcurrfaceplat
GROUP BY poolsforcurrfaceplat."interestRate"
ORDER BY poolsforcurrfaceplat."interestRate";

--- this is teh same thing but with indicator x
SELECT   
    pools.cusip,
    pools.indicator,
    pools.type,
    poolbodies."interestRate",
    poolbodies."remainingBalance",
    poolbodies.factor,
    poolbodies.date
INTO TEMP TABLE poolstestforcurrfaceindicx 
FROM pools 
INNER JOIN poolbodies
ON pools.cusip = poolbodies.cusip 
WHERE poolbodies.date = '2021-08-01'
AND pools.indicator = 'X'
AND pools.type = 'SF'
AND pools.istbaelig = 'true';

-- and the sum and group by part
SELECT poolstestforcurrfaceindicx."interestRate", SUM(poolstestforcurrfaceindicx."remainingBalance")
FROM poolstestforcurrfaceindicx
GROUP BY poolstestforcurrfaceindicx."interestRate"
ORDER BY poolstestforcurrfaceindicx."interestRate";

-- same thing as above but with copy 
\copy (SELECT poolstestforcurrfaceindicx."interestRate", SUM(poolstestforcurrfaceindicx."remainingBalance") FROM poolstestforcurrfaceindicx GROUP BY poolstestforcurrfaceindicx."interestRate" ORDER BY poolstestforcurrfaceindicx."interestRate" ) to 'C:\Users\micha\sumofcurrentface' csv header;

------------------
-- now we need to sum current face of pools + platinums 


-- Case 2 :  Size check. For Pools + Platinums

-- When pools are combined into platinum no new loans are made. Hence our result in case 1 should be similar to this

-- For each coupon we find

-- current face of pool - current face in platinums + current face in platinums

-- Aside from the cases where TBA eligible pools are dumped into a non TBA eligible platinum the sizes we get here should be the same as case 1.
----OOOHHHH maybe I am doing this all wrong 

-- so I have something that should get the pool curent face - the current face of pool in the plat 

-- this
-- current face of pool - current face in platinums + current face in platinums

-- but which pools do we want??

-- now trying to replicate the size stuff
-- so I had this just joins the pool to the poolbody and filters out the ones we don't want 

SELECT   
    pools.cusip,
    pools.name,
    pools.indicator,
    pools.type,
    pools.originalface,
    poolbodies."interestRate",
    poolbodies."remainingBalance",
    poolbodies.factor,
    poolbodies.date 
INTO TEMP TABLE poolsforcurrfaceplat 
FROM pools 
INNER JOIN poolbodies
ON pools.cusip = poolbodies.cusip 
WHERE poolbodies.date = '2021-08-01'
AND pools.indicator = 'M'
AND pools.type = 'SF'
AND pools.istbaelig = 'true';


-------------- going to need platinums

SELECT 
    platinums.cusip,
    platinums.name,
    platinums.originalface,
    platinumbodies.interestrate,
    platinumbodies.remainingbalance,
    platinumbodies.factor,
    platinumbodies.istbaelig,
    platinumbodies.date
INTO TEMP TABLE currplats
FROM platinums
INNER JOIN platinumbodies
ON platinums.cusip = platinumbodies.cusip
WHERE platinumbodies.date = '2021-08-01';

-- Just combining platinum info with platcolls to make life easier later  

SELECT 
    platcolls.cusip,
    currplats.name AS platname,
    currplats.originalface,
    currplats.interestrate,
    currplats.remainingbalance,
    currplats.factor,
    currplats.istbaelig,
    currplats.date,
    platcolls.poolname,
    platcolls.indicator,
    platcolls.faceinplatinum,
    platcolls.active,
    platcolls.born,
    platcolls.terminated
INTO TEMP TABLE platcollswithcurrplats
FROM platcolls
LEFT JOIN currplats
ON platcolls.cusip = currplats.cusip;

-- LIMIT 5;

-- WHERE currplats.cusip IS NULL
-- LIMIT 10;

---------------------------------------------------------------------------

-- STEP one get current face of pools in platinums  

SELECT 
    SUM(COALESCE(platcollswithcurrplats.faceinplatinum, 0)/100) as ofinplat, 
    poolsforcurrfaceplat.cusip AS poolcusip 
INTO TEMP TABLE pooloriginalfaceinplats
FROM platcollswithcurrplats
RIGHT JOIN poolsforcurrfaceplat
ON poolsforcurrfaceplat.name = platcollswithcurrplats.poolname
AND poolsforcurrfaceplat.indicator = platcollswithcurrplats.indicator
-- WHERE platcollswithcurrplats.cusip IS NULL
-- WHERE poolsforcurrfaceplat.cusip = '36202E2A6'
-- ORDER BY platcollswithcurrplats.faceinplatinum
GROUP BY poolsforcurrfaceplat.cusip;
-- LIMIT 2;


------------------ Step 2 find tradeblae current face

SELECT 
    -- *
    pooloriginalfaceinplats.ofinplat,
    poolsforcurrfaceplat.cusip,
    poolsforcurrfaceplat.name,
    poolsforcurrfaceplat.indicator,
    poolsforcurrfaceplat."interestRate" AS poolir,
    poolsforcurrfaceplat."remainingBalance" / poolsforcurrfaceplat.originalface as factortwo,
    poolsforcurrfaceplat.factor,
    poolsforcurrfaceplat.originalface,
    poolsforcurrfaceplat.originalface - pooloriginalfaceinplats.ofinplat AS tradeableof,
    (poolsforcurrfaceplat.originalface - pooloriginalfaceinplats.ofinplat) * (poolsforcurrfaceplat."remainingBalance" / poolsforcurrfaceplat.originalface) AS tradeablecf
INTO TEMP TABLE pooltradeablecurrfaceinplats
FROM pooloriginalfaceinplats
INNER JOIN poolsforcurrfaceplat
ON pooloriginalfaceinplats.poolcusip = poolsforcurrfaceplat.cusip
-- WHERE platcollswithcurrplats.cusip IS NULL
-- WHERE poolsforcurrfaceplat.cusip = '36202E2A6'
-- WHERE poolsforcurrfaceplat.cusip IS NULL
-- WHERE poolsforcurrfaceplat.originalface - (pooloriginalfaceinplats.ofinplat) < 0
-- ORDER BY pooloriginalfaceinplats.ofinplat DESC
-- ORDER BY poolsforcurrfaceplat.originalface - (pooloriginalfaceinplats.ofinplat)
-- LIMIT 10;


-- this just sums the tradeable current face and groups them by coupon (interest rate) 

SELECT 
    poolir AS coupon,
    SUM(tradeablecf) AS tradeablecf
INTO TEMP TABLE poolstradeablecf
FROM pooltradeablecurrfaceinplats
GROUP BY poolir
ORDER BY poolir;
-- LIMIT 2;


--------------------- seems to be working better 

SELECT *
FROM poolscfbycoupon
LEFT JOIN poolstradeablecf
ON poolscfbycoupon."interestRate" = poolstradeablecf.coupon
WHERE poolscfbycoupon.sum > poolstradeablecf.tradeablecf + 1;
-- LIMIT 1;

---------------------------------- now need to check to see which patinums we used 

SELECT 
    DISTINCT (platcollswithcurrplats.cusip) AS platcusip,
    platcollswithcurrplats.istbaelig
INTO TEMP TABLE plattstocheck
FROM platcollswithcurrplats
INNER JOIN poolsforcurrfaceplat
ON poolsforcurrfaceplat.name = platcollswithcurrplats.poolname
AND poolsforcurrfaceplat.indicator = platcollswithcurrplats.indicator
WHERE platcollswithcurrplats.istbaelig IS TRUE
-- WHERE poolsforcurrfaceplat.cusip = '36202E2A6'
-- ORDER BY platcollswithcurrplats.faceinplatinum
-- GROUP BY poolsforcurrfaceplat.cusip;
-- LIMIT 10;


---------------------------------------------------------------------------

-- ROUND TWO

-- the plats to check as they are tba eligible and have G2 Original face in them

SELECT 
    cusip,
    name,
    originalface,
    interestrate,
    remainingbalance,
    factor,
    currplats.istbaelig,
    date
INTO TEMP TABLE plattstocheckwithinfo    
FROM plattstocheck
INNER JOIN currplats
ON plattstocheck.platcusip = currplats.cusip;
-- LIMIT 5;


-- STEP one get current face of platnums in other platinums  

SELECT 
    -- COUNT(*),
    SUM(COALESCE(platcollswithcurrplats.faceinplatinum, 0)/100) as ofindifferentplat, 
    plattstocheckwithinfo.cusip AS platcusip
    -- plattstocheckwithinfo.name 
INTO TEMP TABLE platoriginalfaceinplats
FROM platcollswithcurrplats
RIGHT JOIN plattstocheckwithinfo
ON plattstocheckwithinfo.name = platcollswithcurrplats.poolname
-- WHERE platcollswithcurrplats.cusip IS NULL
-- ORDER BY platcollswithcurrplats.faceinplatinum
GROUP BY 
    plattstocheckwithinfo.cusip 
--     plattstocheckwithinfo.name 
-- HAVING COUNT(*) > 1
-- ORDER BY SUM(COALESCE(platcollswithcurrplats.faceinplatinum, 0)/100) DESC
-- LIMIT 2;


------------------ Step 2 find tradeblae current face

SELECT 
    -- *
    platoriginalfaceinplats.ofindifferentplat,
    currplats.cusip,
    currplats.name,
    currplats.interestrate,
    currplats.remainingbalance / currplats.originalface as factortwo,
    currplats.factor,
    currplats.originalface,
    currplats.originalface - platoriginalfaceinplats.ofindifferentplat AS tradeableof,
    (currplats.originalface - platoriginalfaceinplats.ofindifferentplat) * (currplats.remainingbalance / currplats.originalface) AS tradeablecf
INTO TEMP TABLE platstradeablecurrfaceinplats
FROM platoriginalfaceinplats
INNER JOIN currplats
ON platoriginalfaceinplats.platcusip = currplats.cusip
-- WHERE platcollswithcurrplats.cusip IS NULL
-- WHERE poolsforcurrfaceplat.cusip = '36202E2A6'
-- WHERE poolsforcurrfaceplat.cusip IS NULL
-- WHERE currplats.originalface - platoriginalfaceinplats.ofindifferentplat < 0
-- ORDER BY pooloriginalfaceinplats.ofinplat DESC
-- ORDER BY currplats.originalface - platoriginalfaceinplats.ofindifferentplat DESC
-- LIMIT 10;


-- this just sums the tradeable current face and groups them by coupon (interest rate) 

SELECT 
    interestrate AS coupon,
    SUM(tradeablecf) AS tradeablecf
INTO TEMP TABLE platstradeablecf
FROM platstradeablecurrfaceinplats
GROUP BY interestrate
ORDER BY interestrate
-- LIMIT 2;

------------------------------ add this to the pools tradabel current face

SELECT 
    COALESCE(poolstradeablecf.coupon, platstradeablecf.coupon) AS coupon,
    COALESCE(poolstradeablecf.tradeablecf, 0) + COALESCE(platstradeablecf.tradeablecf, 0) AS tradeablecf
INTO TEMP TABLE poolsplusplatstradeablecf
FROM poolstradeablecf
LEFT JOIN platstradeablecf
ON poolstradeablecf.coupon = platstradeablecf.coupon;



--------------------- checking againist just the current face in G2 pools


SELECT *
FROM poolscfbycoupon
LEFT JOIN poolsplusplatstradeablecf
ON poolscfbycoupon."interestRate" = poolsplusplatstradeablecf.coupon
WHERE poolscfbycoupon.sum > poolsplusplatstradeablecf.tradeablecf + 1;
-- LIMIT 1;

---------------------------------- now need to check to see which patinums we used 

SELECT 
    -- COUNT (DISTINCT (platcollswithcurrplats.cusip))
    DISTINCT (platcollswithcurrplats.cusip),
    platcollswithcurrplats.platname,
    platcollswithcurrplats.originalface,
    platcollswithcurrplats.interestrate,
    platcollswithcurrplats.remainingbalance,
    platcollswithcurrplats.factor,
    platcollswithcurrplats.istbaelig,
    platcollswithcurrplats.date
INTO TEMP TABLE plattstochecktwo
FROM platcollswithcurrplats
INNER JOIN plattstocheckwithinfo 
ON plattstocheckwithinfo.name = platcollswithcurrplats.poolname
WHERE platcollswithcurrplats.istbaelig IS TRUE;
-- WHERE poolsforcurrfaceplat.cusip = '36202E2A6'
-- ORDER BY platcollswithcurrplats.faceinplatinum
-- GROUP BY poolsforcurrfaceplat.cusip;
-- LIMIT 10;



---------------------------------------------------------------------------

-- ROUND THREE


-- STEP one get current face of platnums in other platinums  

SELECT 
    -- COUNT(*),
    SUM(COALESCE(platcollswithcurrplats.faceinplatinum, 0)/100) as ofindifferentplat, 
    plattstochecktwo.cusip AS platcusip
    -- plattstochecktwo.platname 
INTO TEMP TABLE platoriginalfaceinplatstwo
FROM platcollswithcurrplats
RIGHT JOIN plattstochecktwo
ON plattstochecktwo.platname = platcollswithcurrplats.poolname
-- WHERE platcollswithcurrplats.cusip IS NULL
-- ORDER BY platcollswithcurrplats.faceinplatinum
GROUP BY 
    plattstochecktwo.cusip 
--     plattstochecktwo.platname 
-- HAVING COUNT(*) > 1
-- ORDER BY SUM(COALESCE(platcollswithcurrplats.faceinplatinum, 0)/100) DESC
-- LIMIT 2;


------------------ Step 2 find tradeblae current face

SELECT 
    -- *
    platoriginalfaceinplatstwo.ofindifferentplat,
    currplats.cusip,
    currplats.name,
    currplats.interestrate,
    currplats.remainingbalance / currplats.originalface as factortwo,
    currplats.factor,
    currplats.originalface,
    currplats.originalface - platoriginalfaceinplatstwo.ofindifferentplat AS tradeableof,
    (currplats.originalface - platoriginalfaceinplatstwo.ofindifferentplat) * (currplats.remainingbalance / currplats.originalface) AS tradeablecf
INTO TEMP TABLE platstradeablecurrfaceinplatstwo
FROM platoriginalfaceinplatstwo
INNER JOIN currplats
ON platoriginalfaceinplatstwo.platcusip = currplats.cusip
-- WHERE currplats.originalface - platoriginalfaceinplatstwo.ofindifferentplat < 0
-- ORDER BY pooloriginalfaceinplats.ofinplat DESC
-- ORDER BY currplats.originalface - platoriginalfaceinplatstwo.ofindifferentplat ASC
-- LIMIT 10;


-- this just sums the tradeable current face and groups them by coupon (interest rate) 

SELECT 
    interestrate AS coupon,
    SUM(tradeablecf) AS tradeablecf
INTO TEMP TABLE platstradeablecftwo
FROM platstradeablecurrfaceinplatstwo
GROUP BY interestrate
ORDER BY interestrate
-- LIMIT 2;

------------------------------ add this to the pools tradabel current face

SELECT
    -- *
    COALESCE(poolsplusplatstradeablecf.coupon, platstradeablecftwo.coupon) AS coupon,
    COALESCE(poolsplusplatstradeablecf.tradeablecf, 0) + COALESCE(platstradeablecftwo.tradeablecf, 0) AS tradeablecf
INTO TEMP TABLE poolsplusplatstradeablecftwo
FROM poolsplusplatstradeablecf
LEFT JOIN platstradeablecftwo
ON poolsplusplatstradeablecf.coupon = platstradeablecftwo.coupon;



--------------------- checking againist just the current face in G2 pools getting more tradeable current face than was originally in
-- pools


SELECT *
FROM poolscfbycoupon
LEFT JOIN poolsplusplatstradeablecftwo
ON poolscfbycoupon."interestRate" = poolsplusplatstradeablecftwo.coupon
WHERE poolscfbycoupon.sum + 1 < poolsplusplatstradeablecftwo.tradeablecf;
-- LIMIT 1;

---------------------------------- now need to check to see which patinums we used 

SELECT 
    -- COUNT (DISTINCT (platcollswithcurrplats.cusip))
    DISTINCT (platcollswithcurrplats.cusip),
    platcollswithcurrplats.platname,
    platcollswithcurrplats.originalface,
    platcollswithcurrplats.interestrate,
    platcollswithcurrplats.remainingbalance,
    platcollswithcurrplats.factor,
    platcollswithcurrplats.istbaelig,
    platcollswithcurrplats.date
INTO TEMP TABLE plattstochecktwo
FROM platcollswithcurrplats
INNER JOIN plattstocheckwithinfo 
ON plattstocheckwithinfo.name = platcollswithcurrplats.poolname
WHERE platcollswithcurrplats.istbaelig IS TRUE;
-- WHERE poolsforcurrfaceplat.cusip = '36202E2A6'
-- ORDER BY platcollswithcurrplats.faceinplatinum
-- GROUP BY poolsforcurrfaceplat.cusip;
-- LIMIT 10;










































3000000 + 6000000 + 12500000 + 3675837200 + 931017500 + 508457600 + 200000000 + 392122900 + 314202900 + 19700000 + 1878097500 + 70473800 + 57500000 + 451400000 + 17000000 + 78178700 + 3300000 + 130600000 + 3935100 + 505200000 + 31300000 + 320000000 + 18000000 + 3599900 + 5000000 + 36356700 + 29100000 + 21466900 + 8000000 + 4250000 + 72500000 + 85000000 + 21453300 + 84000000 + 190414300 + 132528200


103214925

cmos_builder=# SELECT * FROM platinums where cusip = '3622A3CH1';
   cusip   |  name  | type | issuedate | maturitydate | originalface
-----------+--------+------+-----------+--------------+--------------
 3622A3CH1 | 784572 | SP   |  20180801 |     20430620 |      7624287









-- now trying to start a second round so seems to join ok... but what to do now...
-- keep on trying to go until i get to the very end.. and once i get to the end how do 
-- i get back to the begining??

-- so these are 98 platinums that need to be checked to see if they have current face
-- in another platinum.. so do they need to go into another temp table?? 
-- probably the easiest thing to do at the moment 

-- can I just add them to the table?? maybe 

-- so this is essentialy as a second round where I am looking into the platinums that are tba
-- eligible (if they platinum was not tba eligible we are not adding teh current face so no point in
-- looking further) and have current face in other platinums to see if we need to subtract  

SELECT 
    platcollswithcurrplats.cusip AS platcusip,
    platcollswithcurrplats.istbaelig,
    platcollswithcurrplats.platname,
    -- platcollswithcurrplats.factor,
    platcollswithcurrplats.interestrate,
    platcollswithcurrplats.remainingbalance AS platcf,  
    platcollswithcurrplats.originalface AS platof,
    -- platcollswithcurrplats.poolname,
    -- platcollswithcurrplats.indicator,
    -- poolsforcurrfaceplat.name,
    -- poolsforcurrfaceplat.indicator,
    plattstocheck.platcusip AS otherplatcusip, 
    plattstocheck.platname AS otherplatname, 
    (COALESCE(platcollswithcurrplats.faceinplatinum, 0)/100) AS ofinplat, 
    plattstocheck.platir,
    plattstocheck.platcf / plattstocheck.platof as factortwo,
    plattstocheck.platof AS otherplatof,
    plattstocheck.platof - (COALESCE(platcollswithcurrplats.faceinplatinum, 0)/100) AS tradeableof,
    (plattstocheck.platof - (COALESCE(platcollswithcurrplats.faceinplatinum, 0)/100)) * (plattstocheck.platcf / plattstocheck.platof) AS tradeablecf
INTO TEMP TABLE platcurrfaceinplat
FROM platcollswithcurrplats
RIGHT JOIN plattstocheck
ON plattstocheck.platname = platcollswithcurrplats.poolname
-- WHERE platcollswithcurrplats.cusip IS NULL
-- LIMIT 2;

LIMIT 2;

--------------------sums tradeable current face by coupom

SELECT 
    platir AS coupon,
    SUM(tradeablecf) AS tradeablecf
INTO TEMP TABLE platstradeablecf
FROM platcurrfaceinplat
GROUP BY platir
ORDER BY platir

------------adds the plat tradeable current face to the pool tradeable current face

SELECT 
    COALESCE(poolstradeablecf.coupon, platstradeablecf.coupon) AS coupon,
    COALESCE(poolstradeablecf.tradeablecf, 0) + COALESCE(platstradeablecf.tradeablecf, 0) AS tradeablecf
INTO TEMP TABLE platstradeablecfpluspools
FROM poolstradeablecf
LEFT JOIN platstradeablecf
ON poolstradeablecf.coupon = platstradeablecf.coupon

LIMIT 1;

--------------------------------- geeting the next set of platinums we need to check

SELECT 
    DISTINCT platcusip,
    platname,
    interestrate AS platir,
    platcf,
    platof
INTO TEMP TABLE plattstochecktwo    
FROM 
    platcurrfaceinplat
WHERE 
    istbaelig IS TRUE;

LIMIT 2;



-------------------------------------- after this all the plats seem to be tba elig
-- round three
-- checking platinums againist platcolls

SELECT 
    platcollswithcurrplats.cusip AS platcusip,
    platcollswithcurrplats.istbaelig,
    platcollswithcurrplats.platname,
    -- platcollswithcurrplats.factor,
    platcollswithcurrplats.interestrate,
    platcollswithcurrplats.remainingbalance AS platcf,  
    platcollswithcurrplats.originalface AS platof,
    -- platcollswithcurrplats.poolname,
    -- platcollswithcurrplats.indicator,
    -- poolsforcurrfaceplat.name,
    -- poolsforcurrfaceplat.indicator,
    plattstochecktwo.platcusip AS otherplatcusip, 
    plattstochecktwo.platname AS otherplatname, 
    (COALESCE(platcollswithcurrplats.faceinplatinum, 0)/100) AS ofinplat, 
    plattstochecktwo.platir,
    plattstochecktwo.platcf / plattstochecktwo.platof as factortwo,
    plattstochecktwo.platof AS otherplatof,
    plattstochecktwo.platof - (COALESCE(platcollswithcurrplats.faceinplatinum, 0)/100) AS tradeableof,
    (plattstochecktwo.platof - (COALESCE(platcollswithcurrplats.faceinplatinum, 0)/100)) * (plattstochecktwo.platcf / plattstochecktwo.platof) AS tradeablecf
INTO TEMP TABLE platcurrfaceinplattwo
FROM platcollswithcurrplats
RIGHT JOIN plattstochecktwo
ON plattstochecktwo.platname = platcollswithcurrplats.poolname
-- WHERE platcollswithcurrplats.cusip IS NULL
-- LIMIT 2;


--------------------sums tradeable current face by coupom

SELECT 
    platir AS coupon,
    SUM(tradeablecf) AS tradeablecf
INTO TEMP TABLE platstradeablecftwo
FROM platcurrfaceinplattwo
GROUP BY platir
ORDER BY platir
-- LIMIT 2;

------------adds the plat tradeable current face to the previous tradeable current face

SELECT 
    -- *
    COALESCE(platstradeablecfpluspools.coupon, platstradeablecftwo.coupon) AS coupon,
    COALESCE(platstradeablecfpluspools.tradeablecf, 0) + COALESCE(platstradeablecftwo.tradeablecf, 0) AS tradeablecf
INTO TEMP TABLE platstradeablecfpluspoolstwo
FROM platstradeablecfpluspools
LEFT JOIN platstradeablecftwo
ON platstradeablecfpluspools.coupon = platstradeablecftwo.coupon
-- LIMIT 10;

--------------------------------- geeting the next set of platinums we need to check

SELECT 
    DISTINCT platcusip,
    platname,
    interestrate AS platir,
    platcf,
    platof
INTO TEMP TABLE plattstocheckthree    
FROM 
    platcurrfaceinplattwo
WHERE 
    istbaelig IS TRUE;
LIMIT 2;

-------------------------------------- after this all the plats seem to be tba elig
-- round four
-- checking platinums againist platcolls

SELECT 
    platcollswithcurrplats.cusip AS platcusip,
    platcollswithcurrplats.istbaelig,
    platcollswithcurrplats.platname,
    -- platcollswithcurrplats.factor,
    platcollswithcurrplats.interestrate,
    platcollswithcurrplats.remainingbalance AS platcf,  
    platcollswithcurrplats.originalface AS platof,
    -- platcollswithcurrplats.poolname,
    -- platcollswithcurrplats.indicator,
    -- poolsforcurrfaceplat.name,
    -- poolsforcurrfaceplat.indicator,
    plattstocheckthree.platcusip AS otherplatcusip, 
    plattstocheckthree.platname AS otherplatname, 
    (COALESCE(platcollswithcurrplats.faceinplatinum, 0)/100) AS ofinplat, 
    plattstocheckthree.platir,
    plattstocheckthree.platcf / plattstocheckthree.platof as factortwo,
    plattstocheckthree.platof AS otherplatof,
    plattstocheckthree.platof - (COALESCE(platcollswithcurrplats.faceinplatinum, 0)/100) AS tradeableof,
    (plattstocheckthree.platof - (COALESCE(platcollswithcurrplats.faceinplatinum, 0)/100)) * (plattstocheckthree.platcf / plattstocheckthree.platof) AS tradeablecf
-- INTO TEMP TABLE platcurrfaceinplatthree
FROM platcollswithcurrplats
RIGHT JOIN plattstocheckthree
ON plattstocheckthree.platname = platcollswithcurrplats.poolname
WHERE platcollswithcurrplats.cusip IS NULL
LIMIT 2;


--------------------sums tradeable current face by coupom

SELECT 
    platir AS coupon,
    SUM(tradeablecf) AS tradeablecf
INTO TEMP TABLE platstradeablecftwo
FROM platcurrfaceinplattwo
GROUP BY platir
ORDER BY platir
-- LIMIT 2;

------------adds the plat tradeable current face to the previous tradeable current face

SELECT 
    -- *
    COALESCE(platstradeablecfpluspools.coupon, platstradeablecftwo.coupon) AS coupon,
    COALESCE(platstradeablecfpluspools.tradeablecf, 0) + COALESCE(platstradeablecftwo.tradeablecf, 0) AS tradeablecf
INTO TEMP TABLE platstradeablecfpluspoolstwo
FROM platstradeablecfpluspools
LEFT JOIN platstradeablecftwo
ON platstradeablecfpluspools.coupon = platstradeablecftwo.coupon
-- LIMIT 10;

--------------------------------- geeting the next set of platinums we need to check

SELECT 
    DISTINCT platcusip,
    platname,
    interestrate AS platir,
    platcf,
    platof
INTO TEMP TABLE plattstocheckthree    
FROM 
    platcurrfaceinplattwo
WHERE 
    istbaelig IS TRUE;
LIMIT 2;