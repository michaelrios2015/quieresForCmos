-- i used this to check if all the active pools in a platinum are tbaelig

SELECT cusip, bool_and(x.istbaelig) as eligible
FROM (
	Select platcolls.cusip, platcolls.poolname, platcolls.indicator, pools.istbaelig
	FROM pools
	INNER JOIN platcolls
	ON platcolls.poolname = pools.name
	AND platcolls.indicator = pools.indicator
	WHERE platcolls.active =  'A'
 	) AS x
GROUP BY x.cusip

----------- same thing with temp table does active matter?? We don't know if I am saying it is a permenant
-- character than it probably does not matter but I already did it this way??

Select platcolls.cusip, platcolls.poolname, platcolls.indicator, pools.istbaelig
INTO TEMP TABLE poolsforistbaelig 
FROM pools
INNER JOIN platcolls
ON platcolls.poolname = pools.name
AND platcolls.indicator = pools.indicator
WHERE platcolls.active =  'A'


SELECT cusip, bool_and(poolsforistbaelig.istbaelig) as eligible
FROM poolsforistbaelig
GROUP BY poolsforistbaelig.cusip

\copy (SELECT cusip, bool_and(poolsforistbaelig.istbaelig) as eligible FROM poolsforistbaelig GROUP BY poolsforistbaelig.cusip)  to 'C:\Users\micha\patinums_istbaelig_round_one' csv header;

------------checking platinums against platinums

SELECT cusip, bool_and(x.istbaelig) as eligible
FROM (
	SELECT platcolls.cusip, platcolls.poolname, platcolls.indicator, platinums.istbaelig
FROM platinums
INNER JOIN platcolls
ON platcolls.poolname = platinums.name
AND platcolls.indicator = platinums.indicator
WHERE platcolls.active =  'A'
AND platinums.istbaelig IS NOT NULL
) AS x
GROUP BY x.cusip

-- temp table 

SELECT platcolls.cusip, platcolls.poolname, platcolls.indicator, platinums.istbaelig
INTO TEMP TABLE platsforistbaelig 
FROM platinums
INNER JOIN platcolls
ON platcolls.poolname = platinums.name
AND platcolls.indicator = platinums.indicator
WHERE platcolls.active =  'A'
AND platinums.istbaelig IS NOT NULL

SELECT cusip, bool_and(platsforistbaelig.istbaelig) as eligible
FROM platsforistbaelig 
GROUP BY platsforistbaelig.cusip

\copy (SELECT cusip, bool_and(platsforistbaelig.istbaelig) as eligible FROM platsforistbaelig GROUP BY platsforistbaelig.cusip)  to 'C:\Users\micha\patinums_istbaelig_round_two' csv header;


-- now trying to replicate the size stuff
-- so I had

SELECT   
    pools.cusip,
    pools.name,
    pools.indicator,
    pools.type,
    pools.originalface,
    poolbodies."interestRate",
    poolbodies."remainingBalance",
    poolbodies.factor,
    poolbodies.date 
INTO TEMP TABLE poolsforcurrfaceplat 
FROM pools 
INNER JOIN poolbodies
ON pools.cusip = poolbodies.cusip 
WHERE poolbodies.date = '2021-07-01'
AND pools.indicator = 'M'
AND pools.type = 'SF'
AND pools.istbaelig = 'true'


-- to get the platinum one i need this but need to subtract the part already in platinums 

-- current face of pool - current face in platinums + current face in platinums so this is going fine for pools in plats but I will also need to check on pools not in plats

-- So I think this gets me everything I need

-- so a pool can be in more than one platinums so we need to go through them all find the currface in plat the sum them up by pool cusip, then I can subtract from pool currface ...


SELECT poolsforcurrfaceplat.cusip AS poolcusip, (platcolls.faceinplatinum/100) * (poolsforcurrfaceplat."remainingBalance" /poolsforcurrfaceplat.originalface) AS currfaceinplat, poolsforcurrfaceplat."remainingBalance" /poolsforcurrfaceplat.originalface as factortwo
INTO TEMP TABLE poolcurrfaceinplatt
FROM platcolls
INNER JOIN poolsforcurrfaceplat
ON poolsforcurrfaceplat.name = platcolls.poolname
AND poolsforcurrfaceplat.indicator = platcolls.indicator;



---so this gets the sum of all of the pools current face in plats grouped by the pool cusip 
SELECT poolcurrfaceinplatt.poolcusip, SUM(poolcurrfaceinplatt.currfaceinplat)
INTO TEMP TABLE totalpoolcurrfaceinplatt  
FROM poolcurrfaceinplatt
GROUP BY poolcurrfaceinplatt.poolcusip


LIMIT 10;

-- this should be the current face of all pools minus the current face in the plats so should probably pair this down
SELECT *, poolsforcurrfaceplat."remainingBalance" - COALESCE(sum, 0) as poolcfminuscfinplat
INTO TEMP TABLE poolcurrfaceminuscurrentfaceinplatt 
FROM poolsforcurrfaceplat
LEFT JOIN totalpoolcurrfaceinplatt
ON poolsforcurrfaceplat.cusip = totalpoolcurrfaceinplatt.poolcusip

-- so now I get the current face of all the plats then join with the above table on interestRate then sum them and group them by interestRate??


LIMIT 10;





SELECT *
FROM platcolls
RIGHT JOIN poolsforcurrfaceplat
ON poolsforcurrfaceplat.name = platcolls.poolname
AND poolsforcurrfaceplat.indicator = platcolls.indicator
AND platcolls.cusip IS NULL
LIMIT 10;