
---- SO TBA ELIG needs to be redone 

-- If all of the underlying active pools in a platinum are 
 
-- a. TBA eligible and of type M 
 
-- Than the platinum is both TBA eligible and of type M
 
-- b. TBA eligible and of type X
 
-- Than the platinum is both TBA eligible and of type X
 
-- If the pools are a mix of type X and M than the platinum is not TBA eligible
 
-- So need some way to check pool type so step one
-- Will be just to check all the pools in a plat 
-- Step 2 will need to figure out some way of seeing if all indicators are m or x might need to use count

-- so I think this is all i need for my temp table 
-- we use platcolls to check if pools are TBA elig and if indicator is ALL X or ALL M 

--- pools & plats think I can do it all at once

-- make these two temp tables 

-- SWITCH DATES and run till no more chnages 

-- DROP TABLE platcurr, platistbaelig, platistbaeligoutput, indicatorsandtbaelig ; 

-- this gets me the platinums for the month I wanto to check

SELECT 
    platinums.cusip, 
    platinums.name, 
    platinumbodies.indicator, 
    platinumbodies.istbaelig,
    platinumbodies.date
INTO TEMP TABLE platcurr
FROM platinums
INNER JOIN platinumbodies
ON platinumbodies.cusip = platinums.cusip
WHERE platinumbodies.date = '2021-07-01';

-- this uses platcoll as a join table with pools and plats in the platinum


SELECT 
    platcolls.cusip, 
    platcolls.active,
    pools.name, 
    pools.indicator, 
    pools.istbaelig,
    CASE
        WHEN pools.indicator = 'X' THEN true
        WHEN pools.indicator IS NULL THEN NULL
            ELSE false
        END AS poolindicatorisx,
    CASE
        WHEN pools.indicator = 'M' THEN true
        WHEN pools.indicator IS NULL THEN NULL
            ELSE false
        END AS poolindicatorism,    
    platcurr.cusip AS platcusip,
    platcurr.indicator AS platindicator,
    platcurr.istbaelig AS platistbaelig,
    CASE
        WHEN platcurr.indicator = 'X' THEN true
        WHEN platcurr.indicator IS NULL THEN NULL
            ELSE false
        END AS platindicatorisx,
    CASE
        WHEN platcurr.indicator = 'M' THEN true
        WHEN platcurr.indicator IS NULL THEN NULL
            ELSE false
        END AS platindicatorism
INTO TEMP TABLE platistbaelig 
FROM platcolls
-- so we only look at the plats for that month
INNER JOIN platcurr AS currfilter
ON platcolls.cusip = currfilter.cusip
LEFT JOIN pools 
ON platcolls.poolname = pools.name
AND platcolls.indicator = pools.indicator
LEFT JOIN platcurr
ON platcolls.poolname = platcurr.name
---can probably use born and terminated dates 
-- WHERE platcolls.active =  'A';
WHERE platcolls.born <= '2021-07-01'
AND (platcolls.terminated > '2021-07-01' OR platcolls.terminated IS NULL);
-------------------

-------------- using to check so they have the same count checking them againist each other is a bit more 
-- annoying then it seems and when i try checking just the pool and adding just the plats I seem to be 20 short 
-- but the new way is probably working I mean it's litterally the same number and all are active so it should
-- be fine 

SELECT 
    platcolls.cusip, 
    platcolls.active,
    pools.name, 
    pools.indicator, 
    pools.istbaelig,
    CASE
        WHEN pools.indicator = 'X' THEN true
        WHEN pools.indicator IS NULL THEN NULL
            ELSE false
        END AS poolindicatorisx,
    CASE
        WHEN pools.indicator = 'M' THEN true
        WHEN pools.indicator IS NULL THEN NULL
            ELSE false
        END AS poolindicatorism,    
    platcurr.cusip AS platcusip,
    platcurr.indicator AS platindicator,
    platcurr.istbaelig AS platistbaelig,
    CASE
        WHEN platcurr.indicator = 'X' THEN true
        WHEN platcurr.indicator IS NULL THEN NULL
            ELSE false
        END AS platindicatorisx,
    CASE
        WHEN platcurr.indicator = 'M' THEN true
        WHEN platcurr.indicator IS NULL THEN NULL
            ELSE false
        END AS platindicatorism
INTO TEMP TABLE platistbaeligoldway 
FROM platcolls
-- so we only look at the plats for that month
INNER JOIN platcurr AS currfilter
ON platcolls.cusip = currfilter.cusip
LEFT JOIN pools 
ON platcolls.poolname = pools.name
AND platcolls.indicator = pools.indicator
LEFT JOIN platcurr
ON platcolls.poolname = platcurr.name
---can probably use born and terminated dates 
WHERE platcolls.active =  'A';

SELECT COUNT(*)
FROM platistbaelig
INNER JOIN platistbaeligoldway
ON platistbaelig.cusip = platistbaeligoldway.cusip
WHERE 
    CASE platistbaelig.name IS NOT NULL
platistbaelig.name = platistbaeligoldway.name
AND platistbaelig.indicator = platistbaeligoldway.indicator
 (platistbaelig.platcusip = platistbaeligoldway.platcusip) 

AND (platistbaelig.platcusip IS NOT NULL AND  platistbaeligoldway.platcusip IS NOT NULL);

LIMIT 2;

-- slimmed down version now accomodates those with no pools

SELECT 
    cusip, 
    bool_and(COALESCE(platistbaelig.istbaelig, true) AND COALESCE(platistbaelig.platistbaelig, true)) AS bothistbaelig,
    bool_and(COALESCE(platistbaelig.poolindicatorisx, true)  AND COALESCE(platistbaelig.platindicatorisx, true)) AS bothindicatorisx,
    bool_and(COALESCE(platistbaelig.poolindicatorism, true)  AND COALESCE(platistbaelig.platindicatorism, true)) AS bothindicatorism
INTO TEMP TABLE platistbaeligoutput
FROM platistbaelig
GROUP BY platistbaelig.cusip;


SELECT * from platistbaeligoutput limit 3;

--- putting the logic into sql 

SELECT 
    *,
    CASE 
        WHEN bothistbaelig IS TRUE AND (bothindicatorisx IS NOT TRUE OR bothindicatorism IS NOT TRUE) THEN TRUE
        WHEN bothistbaelig IS FALSE AND (bothindicatorisx IS NOT TRUE OR bothindicatorism IS NOT TRUE) THEN FALSE
    END AS istbaelig,
    CASE 
        WHEN bothindicatorisx IS TRUE AND bothindicatorism IS NOT TRUE THEN 'X'
        WHEN bothindicatorisx IS NOT TRUE AND bothindicatorism IS TRUE THEN 'M'
        WHEN bothindicatorisx IS NOT TRUE OR bothindicatorism IS NOT TRUE THEN 'C'
    END AS indicator
INTO TEMP TABLE indicatorsandtbaelig    
FROM platistbaeligoutput;

-- WHERE cusip = '36241LUK0'


UPDATE platinumbodies
SET indicator = indicatorsandtbaelig.indicator,
    istbaelig = indicatorsandtbaelig.istbaelig
FROM indicatorsandtbaelig
WHERE indicatorsandtbaelig.cusip = platinumbodies.cusip
AND platinumbodies.date = '2021-07-01';

-- run this use it to update platinum bodies 

-- \COPY (SELECT * FROM platistbaeligoutput) to 'C:\Users\micha\patinums_istbaelig_round_one' csv header;


SELECT COUNT(*)
FROM indicatorsandtbaelig
INNER JOIN platinumbodies
ON indicatorsandtbaelig.cusip = platinumbodies.cusip
WHERE platinumbodies.date = '2021-07-01'
AND (platinumbodies.indicator != indicatorsandtbaelig.indicator
OR platinumbodies.istbaelig != indicatorsandtbaelig.istbaelig)


--- this can erease all the cprs
UPDATE platinumbodies
SET indicator = NULL
AND istbaelig = NULL
WHERE platinumbodies.date = '2021-07-01';
